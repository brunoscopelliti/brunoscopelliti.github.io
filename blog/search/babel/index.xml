<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Babel on Bruno Scopelliti</title>
    <link>https://brunoscopelliti.com/blog/search/babel/</link>
    <description>Recent content in Babel on Bruno Scopelliti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 May 2018 09:00:00 +0100</lastBuildDate><atom:link href="https://brunoscopelliti.com/blog/search/babel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A simple Babel optimization I recently learned</title>
      <link>https://brunoscopelliti.com/blog/a-simple-babel-optimization-i-recently-learned/</link>
      <pubDate>Tue, 08 May 2018 09:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/a-simple-babel-optimization-i-recently-learned/</guid>
      <description>Babel relies on a few internal functions to generate the transpiled code.  These functions, when needed, are placed at the top of the generated code, so they are not inlined multiple times across a single file. For example, a class declaration class Foo {} gets transpiled as:
&amp;#34;use strict&amp;#34;; function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(&amp;#34;Cannot call a class as a function&amp;#34;); } } var Foo = function Foo () { _classCallCheck(this, Foo); }; Since Babel performs transpilation on single file basis, there&amp;rsquo;s still the risk that these functions get duplicated across different files.</description>
    </item>
    
  </channel>
</rss>
