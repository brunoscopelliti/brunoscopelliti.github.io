<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memo on Bruno Scopelliti</title>
    <link>https://brunoscopelliti.com/blog/search/memo/</link>
    <description>Recent content in Memo on Bruno Scopelliti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Apr 2021 22:00:00 +0100</lastBuildDate><atom:link href="https://brunoscopelliti.com/blog/search/memo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to configure SSH keys for different GitHub accounts on the same pc</title>
      <link>https://brunoscopelliti.com/blog/how-to-configure-ssh-keys-for-different-github-accounts-on-the-same-pc/</link>
      <pubDate>Fri, 09 Apr 2021 22:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/how-to-configure-ssh-keys-for-different-github-accounts-on-the-same-pc/</guid>
      <description>Recently I fought - and at the end succeded - to configure two different set of SSH keys for different GitHub accounts on the same computer.  I&amp;rsquo;m writing it down the procedure, so that I won&amp;rsquo;t have to repeat this fight again.
  Create two different SSH keys, and add both on GitHub. The documentation on GitHub explains the details.
  SSH config The SSH key config file is usually located at ~/.</description>
    </item>
    
    <item>
      <title>My MacOS setup checklist</title>
      <link>https://brunoscopelliti.com/blog/my-macos-setup-checklist/</link>
      <pubDate>Sun, 21 Mar 2021 21:30:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/my-macos-setup-checklist/</guid>
      <description>This week I formatted my macbook, and after many years of keeping sparse notes in too many different place, I decided it is time to put everything together in one place for future reference&amp;hellip; and what best place than my freshly restyled blog.
General preference   Dock: don&amp;rsquo;t show recent applications.
  Mission control: set hot corners.
  Trackpad/Mouse: Secondary click, click in bottom right corner.
  Keyboard: Use F1, F2, etc.</description>
    </item>
    
    <item>
      <title>Git alias: git unstage</title>
      <link>https://brunoscopelliti.com/blog/git-alias-git-unstage/</link>
      <pubDate>Fri, 05 May 2017 09:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/git-alias-git-unstage/</guid>
      <description>Git, between the others, has a powerful feature called alias.  It&amp;rsquo;s pretty straightforward&amp;hellip; Is there a command you always fail to remember? Add a more friendly shortcut! Is there a command you use frequently, that requires too much keystrokes? Create a shorter alias for it&amp;hellip; or perhaps, you think that a fundamental command is missing from git? Then you can create it yourself using existing commands.
My favourite alias is git unstage.</description>
    </item>
    
    <item>
      <title>Squash commits with git rebase</title>
      <link>https://brunoscopelliti.com/blog/squash-commits-with-git-rebase/</link>
      <pubDate>Mon, 23 Jan 2017 09:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/squash-commits-with-git-rebase/</guid>
      <description>That&amp;rsquo;s one thing I&amp;rsquo;ve just recently learned, and I&amp;rsquo;m writing down here for future reference.
Git&amp;rsquo;s rebase command permits to change the history of a git repository.  Note that this is safe to do only for commits that haven&amp;rsquo;t already been shared to the team you are working with.
Why is it useful? Consider the following scenario:
bruno ~/git/hello-git $ git hist # git hist is a custom alias for &amp;#34;git log --pretty=format:&amp;#39;%h %ad | %s%d [%an]&amp;#39; --graph --date=short&amp;#34; * 8a3a015 2016-10-26 | The most perfect commit in the history of the Universe (HEAD -&amp;gt; master) [brunoscopelliti] * a48ca6d 2016-10-26 | Init repo [brunoscopelliti] I&amp;rsquo;m so proud of myself&amp;hellip; I&amp;rsquo;ve just pushed the best commit in the whole history of the Universe!</description>
    </item>
    
    <item>
      <title>How to disable ESLint rule via JavaScript comment</title>
      <link>https://brunoscopelliti.com/blog/how-to-disable-eslint-rule-via-javascript-comment/</link>
      <pubDate>Fri, 16 Sep 2016 09:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/how-to-disable-eslint-rule-via-javascript-comment/</guid>
      <description>Having recently switched to ESLint, I often find myself googling for how to disable a rule on a particular occurrence via JavaScript comment.
Hope writing this will help me to memorize the syntax, I&amp;rsquo;ll bookmark this page otherwise ðŸ˜….
// eslint-disable-next-line no-alert alert(&amp;#34;foo&amp;#34;); alert(&amp;#34;foo&amp;#34;); // eslint-disable-line no-alert It&amp;rsquo;s also possible to omit the name of the rule, and in this case lint is turned off for that specific line.</description>
    </item>
    
    <item>
      <title>CSS3 box-sizing property</title>
      <link>https://brunoscopelliti.com/blog/css3-box-sizing-property/</link>
      <pubDate>Tue, 30 Apr 2013 09:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/css3-box-sizing-property/</guid>
      <description>Recently I had to use the box-sizing property&amp;hellip; and every time I needed to search on Internet for the correct usages. So, last time this happened I&amp;rsquo;ve decided to write a post about it, with the hope this help me memorize it - or at least next time I can google for myself ðŸ™‚
box-sizing, why? Until a few years ago, when you assigned an element a ruleset like the following, you got a square with size 120 pixel.</description>
    </item>
    
    <item>
      <title>SASS Cheatsheet</title>
      <link>https://brunoscopelliti.com/blog/sass-cheatsheet/</link>
      <pubDate>Wed, 20 Mar 2013 09:00:00 +0100</pubDate>
      
      <guid>https://brunoscopelliti.com/blog/sass-cheatsheet/</guid>
      <description>Few months ago, I started working with SASS - I use SCSS syntax cause I care about my mental health.
It&amp;rsquo;s not particularly difficult, and if you learnt CSS, well, you could learn SASS.
One of the first thing I wanted was some kind of SASS cheatsheet - so I summarized the main features of SASS in a SASS file.
Variables Sass allows you to declare variables that can be used through the stylesheet.</description>
    </item>
    
  </channel>
</rss>
